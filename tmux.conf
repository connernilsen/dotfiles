# set <prefix> to <C-a>
set-option -g prefix C-a
unbind C-b
bind-key C-a send-prefix
bind-key a send-prefix

# # set up colors for terminals that are weird about it
# set-option default-terminal "tmux-256color"
# if-shell '[ "$EXTERNAL_TERM" = linux ]' {
#   set-option -sa terminal-overrides ',linux:RGB'
# }
# if-shell '[ "$EXTERNAL_TERM" = screen-256color ]' {
#   set-option -sa terminal-overrides ',screen-256color:RGB'
# }
# if-shell '[ "$EXTERNAL_TERM" = xterm-256color ]' {
#   set-option -sa terminal-overrides ',xterm-256color:TC'
# }
# set-option -a terminal-overrides ",*256col*:RGB"

# # set up visual mode/copy settings
# setw -g mode-keys vi
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
# # use pbcopy if on mac, nothing otherwise
# if-shell "uname | grep -q Darwin" {
#   bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# } {
#   bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel
# }

# set-option -g default-command "exec $SHELL"

# ## run this OUTSIDE of tmux, it should add something to your clipboard. if it doesn't, there is no clipboard support
# ## $ printf "\e]52;;dGVzdA==\a"

# # tell tmux the escape code for set-clipboard exists
# set -sa terminal-overrides "$EXTERNAL_TERM:Ms==\\E]52;%p1%s;%p2%s\\007"
# # turn on clipboard (you can check the value with `tmux show -s set-clipboard`
# set -s set-clipboard on

# TPM configuration
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'ofirgall/tmux-window-name'  # takes extra work to set up
set -g @plugin 'sainnhe/tmux-fzf' # run with <prefix>F
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'IngoMeyer441/tmux-easy-motion' # jump around with <prefix><space>
# <prefix>m to notify when a pane finishes, <prefix>+alt-m to return to it when it finishes
# <prefix>M to cancel notify
set -g @plugin 'rickstaa/tmux-notify'
set -g @plugin 'trevarj/tmux-open-nvim' # use `ton <file> on cli to open the file in a running nvim session
set -g @plugin '27medkamal/tmux-session-wizard' # session manager with <prefix>-T
set -g @plugin 'MunifTanjim/tmux-suspend' # suspend/resume outermost tmux session with F12
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'christoomey/vim-tmux-navigator' # navigate with <C-[hjkl]>

# statusline stuff
set -g status-right-length 100
set -g status-right '#{prefix_highlight} CPU: #{cpu_percentage} RAM: #{ram_percentage} #{battery_status_bg}Batt: #{battery_percentage} #{battery_remain} | #[bg=yellow]%a, %b-%d %I:%M %p#[bg=green] #{tmux_mode_indicator} '

# keep C-p/C-n for vim
unbind C-p
unbind C-n

# remove other bindings and only run bidirectional word search
set -g @easy-motion-default-motion "bd-W"
set -g @easy-motion-prefix "Space"

# send focus-events to vim
set -g focus-events on

# Set the foreground/background color for the active window
# setw -g window-active-style fg=colour15,bg=colour235

# Set the foreground/background color for all other windows
# setw -g window-style fg=colour245,bg=colour236

# open splits and windows in same directory as current
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# make windows and panes start with 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# mark/unmark pane with <C-m>/<C-M>
bind C-m select-pane -m

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run `tmux source ~/.tmux.conf` to reload this config, then <prefix>I to install plugins
run '~/.tmux/plugins/tpm/tpm'
